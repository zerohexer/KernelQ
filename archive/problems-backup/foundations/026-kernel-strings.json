{
  "id": 26,
  "title": "Kernel Memory Management - Part 2: Dynamic Strings with kstrdup",
  "phase": "foundations",
  "difficulty": 5,
  "xp": 45,
  "description": "Learn kernel string management using kstrdup, strlen, and proper string handling. Understand kernel string functions vs userspace equivalents. This builds on Part 1 memory knowledge.",
  "starter": "#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n#include <linux/slab.h>\n#include <linux/string.h>\n\n// From Part 1 - COMPLETED CONCEPTS:\n// ✓ kmalloc and kfree for basic memory allocation\n// ✓ NULL pointer checking and memory safety\n\n// Part 2 - NEW CONCEPTS:\n// TODO: Learn kernel string functions and dynamic string allocation\n\nstatic int __init kstrings_init(void) {\n    const char *original = \"Hello Kernel World\";\n    char *copy1, *copy2;\n    \n    // TODO: Use kstrdup to create a copy of 'original'\n    // TODO: Use kmalloc + strcpy to create another copy\n    // TODO: Print both copies and their lengths\n    // TODO: Free both allocated strings\n    \n    // Expected output:\n    // \"Original: Hello Kernel World\"\n    // \"Copy1 (kstrdup): Hello Kernel World\"\n    // \"Copy2 (kmalloc+strcpy): Hello Kernel World\"\n    // \"String length: 18\"\n    // \"Strings freed successfully\"\n    \n    return 0;\n}\n\nstatic void __exit kstrings_exit(void) {\n    printk(KERN_INFO \"Kernel strings module unloaded\\n\");\n}\n\nmodule_init(kstrings_init);\nmodule_exit(kstrings_exit);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Your Name\");\nMODULE_DESCRIPTION(\"Kernel string management demonstration module\");",
  "concepts": [
    "kstrdup",
    "kernel string functions",
    "strlen in kernel",
    "strcpy in kernel",
    "string memory management"
  ],
  "skills": [
    "Kernel string handling",
    "Dynamic string allocation",
    "String function usage",
    "Advanced memory management"
  ],
  "multiPart": {
    "part": 2,
    "totalParts": 3,
    "nextProblemId": 14,
    "previousProblemId": 12
  },
  "inputOutput": {
    "expectedOutput": [
      "Original: Hello Kernel World",
      "Copy1 (kstrdup): Hello Kernel World",
      "Copy2 (kmalloc+strcpy): Hello Kernel World",
      "String length: 18",
      "Strings freed successfully"
    ],
    "requirements": [
      "Use required function names: kstrings_init, kstrings_exit",
      "Include linux/string.h for string functions",
      "Use exact string: \"Hello Kernel World\"",
      "Create copy1 using kstrdup(original, GFP_KERNEL)",
      "Create copy2 using kmalloc + strcpy combination",
      "Check for allocation failures",
      "Use strlen to get string length",
      "Print in exact format shown above",
      "Free both allocated strings with kfree"
    ]
  },
  "validation": {
    "exactRequirements": {
      "functionNames": ["kstrings_init", "kstrings_exit"],
      "variables": [
        { "name": "original", "type": "const char*", "value": "\"Hello Kernel World\"" },
        { "name": "copy1", "type": "char*", "value": "kstrdup_result" },
        { "name": "copy2", "type": "char*", "value": "kmalloc_result" }
      ],
      "outputMessages": [
        "Original: Hello Kernel World",
        "Copy1 \\(kstrdup\\): Hello Kernel World",
        "Copy2 \\(kmalloc\\+strcpy\\): Hello Kernel World",
        "String length: 18",
        "Strings freed successfully"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h",
        "linux/init.h",
        "linux/slab.h",
        "linux/string.h"
      ],
      "mustContain": ["kstrdup", "strlen", "strcpy", "GFP_KERNEL", "kfree"],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "kstrdup_usage",
        "name": "kstrdup Function Usage",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["kstrdup", "original", "GFP_KERNEL"],
        "prohibitedSymbols": ["strdup"]
      },
      {
        "id": "manual_copy",
        "name": "Manual String Copy with kmalloc",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["kmalloc", "strlen", "strcpy"],
        "prohibitedSymbols": []
      },
      {
        "id": "string_handling",
        "name": "Proper String Handling",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Original: Hello Kernel World", "exact": true },
          { "pattern": "Copy1 \\(kstrdup\\): Hello Kernel World", "exact": false },
          { "pattern": "Copy2 \\(kmalloc\\+strcpy\\): Hello Kernel World", "exact": false },
          { "pattern": "String length: 18", "exact": true },
          { "pattern": "Strings freed successfully", "exact": true }
        ]
      }
    ]
  }
}