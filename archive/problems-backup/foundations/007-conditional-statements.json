{
  "id": 7,
  "title": "Conditional Statements and Control Flow",
  "phase": "foundations",
  "difficulty": 3,
  "xp": 30,
  "description": "Master if/else statements and logical operators for control flow in kernel programming. Learn to make decisions and control program execution based on conditions.",
  "starter": "#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n\nstatic int __init conditional_init(void) {\n    int temperature = 75;\n    int humidity = 60;\n    bool is_summer = true;\n    int age = 25;\n    \n    // TODO: Use if/else to check temperature ranges\n    // if temperature >= 80: print \"Hot weather\"\n    // else if temperature >= 60: print \"Moderate weather\" \n    // else: print \"Cold weather\"\n    \n    // TODO: Use logical operators (&&, ||, !)\n    // if (temperature > 70 && humidity > 50): print \"Warm and humid\"\n    // if (is_summer || temperature > 85): print \"Summer conditions\"\n    // if (!is_summer): print \"Not summer\"\n    \n    // TODO: Use nested if statements\n    // if (age >= 18) {\n    //     if (age >= 65) print \"Senior citizen\"\n    //     else print \"Adult\"\n    // } else {\n    //     print \"Minor\"\n    // }\n    \n    // Expected output:\n    // \"Temperature Check: Moderate weather\"\n    // \"Condition Check: Warm and humid\" \n    // \"Season Check: Summer conditions\"\n    // \"Age Check: Adult\"\n    \n    return 0;\n}\n\nstatic void __exit conditional_exit(void) {\n    printk(KERN_INFO \"Conditional statements module unloaded\\n\");\n}\n\nmodule_init(conditional_init);\nmodule_exit(conditional_exit);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Your Name\");\nMODULE_DESCRIPTION(\"Conditional statements and control flow module\");",
  "concepts": [
    "if/else statements",
    "logical operators",
    "nested conditions", 
    "boolean logic",
    "control flow"
  ],
  "skills": [
    "Decision making",
    "Conditional logic",
    "Program flow control",
    "Boolean operations"
  ],
  "inputOutput": {
    "expectedOutput": [
      "Temperature Check: Moderate weather",
      "Condition Check: Warm and humid",
      "Season Check: Summer conditions", 
      "Age Check: Adult"
    ],
    "requirements": [
      "Use required function names: conditional_init, conditional_exit",
      "Use exact variable values: temperature=75, humidity=60, is_summer=true, age=25",
      "Implement if/else if/else for temperature check",
      "Use logical operators: && (AND), || (OR), ! (NOT)",
      "Implement nested if statements for age check",
      "Print results with exact prefixes: 'Temperature Check:', 'Condition Check:', etc.",
      "Must use actual conditional logic, not hardcoded prints"
    ]
  },
  "validation": {
    "exactRequirements": {
      "functionNames": ["conditional_init", "conditional_exit"],
      "variables": [
        { "name": "temperature", "type": "int", "value": 75 },
        { "name": "humidity", "type": "int", "value": 60 },
        { "name": "is_summer", "type": "bool", "value": true },
        { "name": "age", "type": "int", "value": 25 }
      ],
      "outputMessages": [
        "Temperature Check: Moderate weather",
        "Condition Check: Warm and humid",
        "Season Check: Summer conditions",
        "Age Check: Adult"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h", 
        "linux/init.h"
      ],
      "mustContain": ["if", "else", "&&", "||", "!", ">=", ">"],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "if_else_structure",
        "name": "Proper if/else if/else Structure",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["if (", "else if", "else"],
        "prohibitedSymbols": []
      },
      {
        "id": "logical_operators",
        "name": "All Logical Operators Used",
        "type": "code_analysis", 
        "critical": true,
        "expectedSymbols": ["&&", "||", "!"],
        "prohibitedSymbols": []
      },
      {
        "id": "temperature_conditions",
        "name": "Temperature Range Conditions",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["temperature >= 80", "temperature >= 60"],
        "prohibitedSymbols": []
      },
      {
        "id": "compound_conditions",
        "name": "Compound Condition Logic",
        "type": "code_analysis",
        "critical": true, 
        "expectedSymbols": ["temperature > 70 && humidity > 50", "is_summer ||"],
        "prohibitedSymbols": []
      },
      {
        "id": "nested_conditions",
        "name": "Nested if Statements",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["age >= 18", "age >= 65"],
        "prohibitedSymbols": []
      },
      {
        "id": "correct_logic_output",
        "name": "Correct Conditional Logic Results",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Temperature Check: Moderate weather", "exact": true },
          { "pattern": "Condition Check: Warm and humid", "exact": true },
          { "pattern": "Season Check: Summer conditions", "exact": true },
          { "pattern": "Age Check: Adult", "exact": true }
        ]
      },
      {
        "id": "no_hardcoded_logic",
        "name": "No Hardcoded Results - Must Use Variables",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["temperature", "humidity", "is_summer", "age"],
        "prohibitedSymbols": ["if (true)", "if (false)", "75 >=", "60 >"]
      }
    ]
  }
}