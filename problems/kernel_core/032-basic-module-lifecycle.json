{
  "id": 32,
  "title": "Basic Module Lifecycle",
  "difficulty": 3,
  "xp": 30,
  "phase": "kernel_core",
  "description": "Create a basic kernel module that demonstrates proper module lifecycle management. This module should load cleanly, perform basic initialization, and unload properly with appropriate cleanup. This is fundamental for all kernel development work.",
  "concepts": ["module_init", "module_exit", "MODULE_LICENSE", "kernel_logging", "error_handling"],
  "skills": ["module_development", "kernel_apis", "initialization", "cleanup", "debugging"],
  "starter": "#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n\n// TODO: Add module information macros\n// TODO: Implement module initialization function\n// TODO: Implement module cleanup function\n// TODO: Register init and exit functions\n\nstatic int __init basic_module_init(void)\n{\n    // TODO: Add initialization code\n    // Should print \"Basic module loaded successfully\"\n    // Should return 0 on success\n    return 0;\n}\n\nstatic void __exit basic_module_exit(void)\n{\n    // TODO: Add cleanup code\n    // Should print \"Basic module unloaded cleanly\"\n}\n\n// TODO: Register the init and exit functions\n// TODO: Add module metadata",
  "validation": {
    "exactRequirements": {
      "functionNames": ["basic_module_init", "basic_module_exit"],
      "outputMessages": [
        "Basic module loaded successfully",
        "Basic module unloaded cleanly"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h", 
        "linux/init.h"
      ],
      "mustContain": [
        "module_init",
        "module_exit",
        "MODULE_LICENSE",
        "MODULE_AUTHOR",
        "MODULE_DESCRIPTION",
        "__init",
        "__exit"
      ],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "module_structure",
        "name": "Module Structure Check",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["__init", "__exit", "module_init", "module_exit"],
        "prohibitedSymbols": ["TODO:", "FIXME:", "printf", "malloc", "free"]
      },
      {
        "id": "module_metadata",
        "name": "Module Metadata Check",
        "type": "code_analysis", 
        "critical": true,
        "expectedSymbols": ["MODULE_LICENSE", "MODULE_AUTHOR", "MODULE_DESCRIPTION"],
        "prohibitedSymbols": []
      },
      {
        "id": "load_message",
        "name": "Module Load Message",
        "type": "output_match",
        "critical": true,
        "expected": [
          {"pattern": "Basic module loaded successfully", "exact": true}
        ]
      },
      {
        "id": "unload_message", 
        "name": "Module Unload Message",
        "type": "output_match",
        "critical": true,
        "expected": [
          {"pattern": "Basic module unloaded cleanly", "exact": true}
        ]
      },
      {
        "id": "function_signatures",
        "name": "Function Signatures",
        "type": "symbol_check",
        "critical": true,
        "expected": ["basic_module_init", "basic_module_exit"]
      },
      {
        "id": "return_value_check",
        "name": "Proper Return Values",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["return 0"],
        "prohibitedSymbols": ["return -1", "return 1"]
      }
    ]
  }
}