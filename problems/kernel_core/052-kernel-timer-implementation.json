{
  "id": 52,
  "title": "Kernel Timer Implementation",
  "difficulty": 5,
  "xp": 25,
  "phase": "kernel_core",
  "description": "Implement a kernel module that uses a timer to periodically print messages. The timer should fire every 2 seconds and print a counter value. This teaches you kernel timer management and periodic task scheduling.",
  "concepts": ["timers", "periodic_tasks", "jiffies", "callbacks", "cleanup"],
  "skills": ["timer_setup", "mod_timer", "del_timer", "timer_callbacks", "resource_management"],
  "starter": "#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n#include <linux/timer.h>\n#include <linux/jiffies.h>\n\n// TODO: Declare global timer structure\n// TODO: Declare counter variable\n\n// TODO: Implement timer callback function\n// Function signature: void timer_callback(struct timer_list *t)\n\nstatic int __init timer_demo_init(void)\n{\n    printk(KERN_INFO \"Timer demo module loaded\\n\");\n    \n    // TODO: Initialize timer with timer_setup()\n    // TODO: Set timer to fire in 2 seconds using mod_timer()\n    \n    return 0;\n}\n\nstatic void __exit timer_demo_exit(void)\n{\n    // TODO: Delete timer with del_timer()\n    printk(KERN_INFO \"Timer demo module unloaded\\n\");\n}\n\nmodule_init(timer_demo_init);\nmodule_exit(timer_demo_exit);\nMODULE_LICENSE(\"GPL\");\nMODULE_DESCRIPTION(\"Kernel Timer Implementation Demo\");\nMODULE_AUTHOR(\"Kernel Academy\");",
  "validation": {
    "exactRequirements": {
      "functionNames": ["timer_demo_init", "timer_demo_exit", "timer_callback"],
      "variables": [
        { "name": "my_timer", "type": "struct timer_list" },
        { "name": "counter", "type": "int" }
      ],
      "outputMessages": [
        "Timer demo module loaded",
        "Timer fired: count = 1",
        "Timer demo module unloaded"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h",
        "linux/timer.h",
        "linux/jiffies.h"
      ],
      "mustContain": [
        "timer_setup",
        "mod_timer",
        "del_timer",
        "jiffies",
        "msecs_to_jiffies"
      ]
    },
    "testCases": [
      {
        "id": "required_functions",
        "name": "Required Function Names",
        "type": "symbol_check",
        "critical": true,
        "expected": ["timer_demo_init", "timer_demo_exit", "timer_callback"]
      },
      {
        "id": "timer_variables",
        "name": "Timer Variables Declaration",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["my_timer", "counter", "timer_list"],
        "prohibitedSymbols": ["TODO:", "FIXME:"]
      },
      {
        "id": "timer_api_usage",
        "name": "Kernel Timer API Usage",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["timer_setup", "mod_timer", "del_timer", "jiffies"],
        "prohibitedSymbols": ["sleep", "delay", "usleep"]
      },
      {
        "id": "required_headers",
        "name": "Required Header Files",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["linux/timer.h", "linux/jiffies.h"],
        "prohibitedSymbols": ["time.h", "unistd.h"]
      },
      {
        "id": "module_output",
        "name": "Module Load/Unload Messages",
        "type": "output_match",
        "critical": true,
        "expected": [
          {"pattern": "Timer demo module loaded", "exact": true},
          {"pattern": "Timer demo module unloaded", "exact": true}
        ]
      },
      {
        "id": "timer_callback_output",
        "name": "Timer Callback Output",
        "type": "output_match",
        "critical": true,
        "expected": [
          {"pattern": "Timer fired: count =", "exact": false}
        ]
      }
    ]
  }
}