{
  "id": 3,
  "title": "Arrays and Loops in Kernel Space",
  "phase": "foundations",
  "difficulty": 3,
  "xp": 25,
  "description": "Learn to work with arrays and loops in kernel space. Create an array of integers, define utility functions in a header file, and use a for loop to print each element. This introduces fundamental C programming concepts in kernel context with proper multi-file organization.",
  "mainFile": "arrays.c",
  "files": [
    {
      "name": "arrays.h",
      "content": "#ifndef ARRAYS_H\n#define ARRAYS_H\n\n#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n\n/* Array size constant */\n#define ARRAY_SIZE 5\n\n/* TODO: Declare array and function prototypes:\n * extern int numbers[ARRAY_SIZE];\n * void print_array(int *arr, int size);\n */\n\n#endif /* ARRAYS_H */",
      "readOnly": false,
      "language": "h"
    },
    {
      "name": "arrays.c",
      "content": "#include \"arrays.h\"\n\n/* TODO: Define the array with exact values [10, 20, 30, 40, 50] */\n/* int numbers[ARRAY_SIZE] = {10, 20, 30, 40, 50}; */\n\n/* TODO: Implement print_array function:\n * void print_array(int *arr, int size)\n * {\n *     int i;\n *     for (i = 0; i < size; i++) {\n *         printk(KERN_INFO \"Element %d: %d\\n\", i, arr[i]);\n *     }\n * }\n */\n\nstatic int __init arrays_init(void)\n{\n    printk(KERN_INFO \"Arrays module loaded\\n\");\n    /* TODO: Call print_array function */\n    /* print_array(numbers, ARRAY_SIZE); */\n    return 0;\n}\n\nstatic void __exit arrays_exit(void)\n{\n    printk(KERN_INFO \"Arrays module unloaded\\n\");\n}\n\nmodule_init(arrays_init);\nmodule_exit(arrays_exit);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Student\");\nMODULE_DESCRIPTION(\"Arrays and loops demonstration module\");\nMODULE_VERSION(\"1.0\");",
      "readOnly": false,
      "language": "c"
    },
    {
      "name": "Makefile",
      "content": "# Arrays module Makefile\nobj-m += arrays.o\n\n# Kernel build directory\nKDIR := /lib/modules/$(shell uname -r)/build\n\n# Default target\nall:\n\tmake -C $(KDIR) M=$(PWD) modules\n\nclean:\n\tmake -C $(KDIR) M=$(PWD) clean\n\ninstall: all\n\tmake -C $(KDIR) M=$(PWD) modules_install\n\nhelp:\n\tmake -C $(KDIR) M=$(PWD) help\n\n.PHONY: all clean install help",
      "readOnly": true,
      "language": "makefile"
    }
  ],
  "concepts": [
    "arrays",
    "for loops",
    "array indexing",
    "function prototypes",
    "function definitions",
    "multi-file organization"
  ],
  "skills": [
    "Array manipulation",
    "Loop control",
    "Function implementation",
    "Header organization",
    "Index-based access"
  ],
  "validation": {
    "exactRequirements": {
      "functionNames": ["arrays_init", "arrays_exit", "print_array"],
      "variables": [
        { "name": "numbers", "type": "int[]", "value": "[10, 20, 30, 40, 50]" }
      ],
      "outputMessages": [
        "Arrays module loaded",
        "Element 0: 10",
        "Element 1: 20",
        "Element 2: 30",
        "Element 3: 40",
        "Element 4: 50"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h",
        "linux/init.h"
      ],
      "mustContain": ["for", "printk", "extern", "#define ARRAY_SIZE"],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "header_declarations",
        "name": "Header Declarations",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["extern int numbers", "void print_array", "#define ARRAY_SIZE"],
        "prohibitedSymbols": []
      },
      {
        "id": "array_definition",
        "name": "Array Definition",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["int numbers[ARRAY_SIZE]", "10, 20, 30, 40, 50"],
        "prohibitedSymbols": ["int data[]", "int arr[]", "int values[]"]
      },
      {
        "id": "function_implementation",
        "name": "Function Implementation",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["void print_array", "for", "i++", "i < size"],
        "prohibitedSymbols": []
      },
      {
        "id": "exact_output",
        "name": "Exact Output Format",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Arrays module loaded", "exact": true },
          { "pattern": "Element 0: 10", "exact": true },
          { "pattern": "Element 1: 20", "exact": true },
          { "pattern": "Element 2: 30", "exact": true },
          { "pattern": "Element 3: 40", "exact": true },
          { "pattern": "Element 4: 50", "exact": true }
        ]
      }
    ]
  }
}