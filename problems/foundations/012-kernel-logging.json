{
  "id": 12,
  "title": "Kernel Logging with printk and Log Levels",
  "phase": "foundations",
  "difficulty": 3,
  "xp": 30,
  "description": "Master kernel logging using printk with different log levels. Understand when to use each log level and how kernel logging differs from userspace printf.",
  "starter": "#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n\nstatic int __init printk_init(void) {\n    int error_code = -12;\n    int device_count = 3;\n    unsigned long memory_addr = 0xdeadbeef;\n    \n    // TODO: Use different printk log levels\n    // KERN_EMERG: System is unusable\n    // KERN_ALERT: Action must be taken immediately  \n    // KERN_CRIT: Critical conditions\n    // KERN_ERR: Error conditions\n    // KERN_WARNING: Warning conditions\n    // KERN_NOTICE: Normal but significant condition\n    // KERN_INFO: Informational\n    // KERN_DEBUG: Debug-level messages\n    \n    // TODO: Demonstrate each log level with appropriate messages\n    printk(KERN_INFO \"Module initialization started\\n\");\n    \n    // TODO: Simulate different scenarios with appropriate log levels\n    if (device_count > 0) {\n        printk(KERN_NOTICE \"Found %d devices during initialization\\n\", device_count);\n    }\n    \n    if (error_code < 0) {\n        printk(KERN_WARNING \"Non-critical error occurred: %d\\n\", error_code);\n    }\n    \n    // TODO: Show different format specifiers\n    printk(KERN_DEBUG \"Debug info: memory_addr=0x%lx, device_count=%d\\n\", \n           memory_addr, device_count);\n    \n    // TODO: Demonstrate pr_* macros (modern alternatives)\n    pr_info(\"Using pr_info macro for informational message\\n\");\n    pr_warn(\"Using pr_warn macro for warning message\\n\");\n    pr_err(\"Using pr_err macro for error message\\n\");\n    \n    // TODO: Rate-limited printing\n    printk_ratelimited(KERN_INFO \"This message is rate-limited\\n\");\n    \n    // Expected output (with appropriate log levels):\n    // \"Module initialization started\"\n    // \"Found 3 devices during initialization\" \n    // \"Non-critical error occurred: -12\"\n    // \"Debug info: memory_addr=0xdeadbeef, device_count=3\"\n    // \"Using pr_info macro for informational message\"\n    // \"Using pr_warn macro for warning message\"\n    // \"Using pr_err macro for error message\"\n    // \"This message is rate-limited\"\n    \n    return 0;\n}\n\nstatic void __exit printk_exit(void) {\n    printk(KERN_INFO \"Module cleanup completed\\n\");\n}\n\nmodule_init(printk_init);\nmodule_exit(printk_exit);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Your Name\");\nMODULE_DESCRIPTION(\"Kernel logging with printk and log levels module\");",
  "concepts": [
    "printk function",
    "kernel log levels",
    "KERN_* constants",
    "pr_* macros",
    "format specifiers",
    "rate limiting",
    "kernel vs userspace logging"
  ],
  "skills": [
    "Kernel debugging",
    "Logging best practices",
    "Message categorization",
    "Format string usage"
  ],
  "inputOutput": {
    "expectedOutput": [
      "Module initialization started",
      "Found 3 devices during initialization",
      "Non-critical error occurred: -12",
      "Debug info: memory_addr=0xdeadbeef, device_count=3",
      "Using pr_info macro for informational message",
      "Using pr_warn macro for warning message", 
      "Using pr_err macro for error message",
      "This message is rate-limited"
    ],
    "requirements": [
      "Use required function names: printk_init, printk_exit",
      "Use exact variable values: error_code=-12, device_count=3, memory_addr=0xdeadbeef",
      "Use different printk log levels: KERN_INFO, KERN_NOTICE, KERN_WARNING, KERN_DEBUG",
      "Use pr_* macros: pr_info, pr_warn, pr_err",
      "Use printk_ratelimited for rate-limited message",
      "Use appropriate format specifiers: %d, %lx",
      "Match log levels to message content appropriately",
      "Print messages in exact format shown above"
    ]
  },
  "validation": {
    "exactRequirements": {
      "functionNames": ["printk_init", "printk_exit"],
      "variables": [
        { "name": "error_code", "type": "int", "value": -12 },
        { "name": "device_count", "type": "int", "value": 3 },
        { "name": "memory_addr", "type": "unsigned long", "value": "0xdeadbeef" }
      ],
      "outputMessages": [
        "Module initialization started",
        "Found 3 devices during initialization",
        "Non-critical error occurred: -12",
        "Debug info: memory_addr=0xdeadbeef, device_count=3",
        "Using pr_info macro for informational message",
        "Using pr_warn macro for warning message",
        "Using pr_err macro for error message",
        "This message is rate-limited"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h",
        "linux/init.h"
      ],
      "mustContain": ["printk(KERN_INFO", "printk(KERN_NOTICE", "printk(KERN_WARNING", "printk(KERN_DEBUG", "pr_info", "pr_warn", "pr_err", "printk_ratelimited"],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "log_level_usage",
        "name": "All Required Log Levels Used",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["KERN_INFO", "KERN_NOTICE", "KERN_WARNING", "KERN_DEBUG"],
        "prohibitedSymbols": ["printf"]
      },
      {
        "id": "pr_macro_usage",
        "name": "Modern pr_* Macro Usage",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["pr_info(", "pr_warn(", "pr_err("],
        "prohibitedSymbols": []
      },
      {
        "id": "format_specifiers",
        "name": "Proper Format Specifier Usage", 
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["%d", "%lx"],
        "prohibitedSymbols": ["%s\" for numbers"]
      },
      {
        "id": "rate_limiting",
        "name": "Rate-Limited Printing Usage",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["printk_ratelimited("],
        "prohibitedSymbols": []
      },
      {
        "id": "conditional_logging",
        "name": "Conditional Logging Logic",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["if (device_count >", "if (error_code <"],
        "prohibitedSymbols": []
      },
      {
        "id": "appropriate_log_levels",
        "name": "Appropriate Log Level Selection",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Module initialization started", "exact": true },
          { "pattern": "Found 3 devices during initialization", "exact": true },
          { "pattern": "Non-critical error occurred: -12", "exact": true }
        ]
      },
      {
        "id": "debug_formatting",
        "name": "Debug Information Formatting",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Debug info: memory_addr=0xdeadbeef, device_count=3", "exact": true }
        ]
      },
      {
        "id": "pr_macro_output",
        "name": "pr_* Macro Output",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Using pr_info macro for informational message", "exact": true },
          { "pattern": "Using pr_warn macro for warning message", "exact": true },
          { "pattern": "Using pr_err macro for error message", "exact": true }
        ]
      }
    ]
  }
}