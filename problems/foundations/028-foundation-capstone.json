{
  "id": 28,
  "title": "Foundation Capstone: Complete Kernel Module",
  "phase": "foundations",
  "difficulty": 6,
  "xp": 60,
  "description": "Create a comprehensive kernel module that demonstrates all foundation concepts. This capstone project combines everything learned to build a production-ready kernel module with proper error handling, memory management, and configuration.",
  "starter": "#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n#include <linux/slab.h>\n#include <linux/string.h>\n#include <linux/moduleparam.h>\n#include <linux/errno.h>\n\n// TODO: Define a structure 'kernel_device' with:\n// - int device_id\n// - char *name\n// - int status (0=inactive, 1=active)\n// - void *data_buffer\n// - size_t buffer_size\n\n// TODO: Module parameters:\n// - int max_devices (default 5)\n// - int buffer_size (default 1024)\n// - bool debug_mode (default false)\n\n// TODO: Global variables:\n// - Array of pointers to kernel_device structures\n// - Counter for active devices\n\n// TODO: Functions to implement:\n// - create_device(int id, const char *name) -> returns pointer or NULL\n// - destroy_device(struct kernel_device *dev) -> cleanup function\n// - list_devices(void) -> print all active devices\n\nstatic int __init capstone_init(void) {\n    // TODO: Initialize module\n    // TODO: Create 3 test devices with IDs 1, 2, 3 and names \"dev1\", \"dev2\", \"dev3\"\n    // TODO: List all devices\n    // TODO: Handle all error conditions\n    \n    return 0;\n}\n\nstatic void __exit capstone_exit(void) {\n    // TODO: Cleanup all allocated resources\n    // TODO: Destroy all devices\n    printk(KERN_INFO \"Foundation capstone module unloaded\\n\");\n}\n\nmodule_init(capstone_init);\nmodule_exit(capstone_exit);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Your Name\");\nMODULE_DESCRIPTION(\"Foundation capstone demonstration module\");\nMODULE_VERSION(\"1.0\");",
  "concepts": [
    "comprehensive module design",
    "integrated memory management",
    "error handling patterns",
    "module parameters",
    "resource cleanup",
    "production practices"
  ],
  "skills": [
    "Complete module development",
    "Integration of all foundation concepts",
    "Production-ready code",
    "Professional kernel programming"
  ],
  "inputOutput": {
    "expectedOutput": [
      "Foundation Capstone Module loaded",
      "Module parameters: max_devices=5, buffer_size=1024, debug_mode=0",
      "Device 1 (dev1) created successfully",
      "Device 2 (dev2) created successfully", 
      "Device 3 (dev3) created successfully",
      "Active devices:",
      "  Device 1: dev1 (status: 1, buffer: 1024 bytes)",
      "  Device 2: dev2 (status: 1, buffer: 1024 bytes)",
      "  Device 3: dev3 (status: 1, buffer: 1024 bytes)",
      "Total active devices: 3"
    ],
    "requirements": [
      "Use required function names: capstone_init, capstone_exit",
      "Define struct kernel_device with exact members specified",
      "Implement module parameters: max_devices, buffer_size, debug_mode with defaults",
      "Implement functions: create_device, destroy_device, list_devices",
      "Create exactly 3 devices with IDs 1,2,3 and names dev1,dev2,dev3",
      "Allocate buffer for each device using module parameter buffer_size",
      "Implement complete error handling with proper cleanup",
      "Print output in exact format shown above",
      "Free all resources in exit function"
    ]
  },
  "validation": {
    "exactRequirements": {
      "functionNames": ["capstone_init", "capstone_exit", "create_device", "destroy_device", "list_devices"],
      "variables": [
        { "name": "max_devices", "type": "int", "value": 5 },
        { "name": "buffer_size", "type": "int", "value": 1024 },
        { "name": "debug_mode", "type": "bool", "value": false }
      ],
      "outputMessages": [
        "Foundation Capstone Module loaded",
        "Module parameters: max_devices=5, buffer_size=1024, debug_mode=0",
        "Device 1 \\(dev1\\) created successfully",
        "Device 2 \\(dev2\\) created successfully",
        "Device 3 \\(dev3\\) created successfully",
        "Active devices:",
        "Total active devices: 3"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h",
        "linux/init.h",
        "linux/slab.h",
        "linux/string.h",
        "linux/moduleparam.h",
        "linux/errno.h"
      ],
      "mustContain": ["struct kernel_device", "create_device", "destroy_device", "kmalloc", "kfree", "module_param"],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "structure_definition",
        "name": "Complete Structure Definition",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["struct kernel_device", "device_id", "char *name", "int status", "void *data_buffer", "size_t buffer_size"],
        "prohibitedSymbols": []
      },
      {
        "id": "function_implementation",
        "name": "Required Functions Implemented",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["struct kernel_device *create_device", "void destroy_device", "void list_devices"],
        "prohibitedSymbols": []
      },
      {
        "id": "memory_management",
        "name": "Proper Memory Management",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["kmalloc", "kstrdup", "kfree"],
        "prohibitedSymbols": ["malloc", "free"]
      },
      {
        "id": "comprehensive_output",
        "name": "Comprehensive Module Output",
        "type": "output_match", 
        "critical": true,
        "expected": [
          { "pattern": "Foundation Capstone Module loaded", "exact": true },
          { "pattern": "Module parameters: max_devices=5, buffer_size=1024, debug_mode=0", "exact": true },
          { "pattern": "Device 1 \\(dev1\\) created successfully", "exact": false },
          { "pattern": "Device 2 \\(dev2\\) created successfully", "exact": false },
          { "pattern": "Device 3 \\(dev3\\) created successfully", "exact": false },
          { "pattern": "Total active devices: 3", "exact": true }
        ]
      }
    ]
  }
}