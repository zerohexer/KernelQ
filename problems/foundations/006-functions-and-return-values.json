{
  "id": 6,
  "title": "Functions and Return Values",
  "phase": "foundations", 
  "difficulty": 3,
  "xp": 25,
  "description": "Create custom functions that perform calculations and return values. Learn function declaration, parameter passing, and return values in kernel programming context.",
  "starter": "#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n\n// TODO: Create a function called 'calculate_sum' that takes two integers and returns their sum\n// TODO: Create a function called 'find_max' that takes two integers and returns the larger one\n\nstatic int __init functions_init(void) {\n    int a = 15, b = 25;\n    int sum, max;\n    \n    // TODO: Call calculate_sum and find_max functions\n    // TODO: Print results in exact format:\n    // \"Sum of 15 and 25 is: 40\"\n    // \"Maximum of 15 and 25 is: 25\"\n    \n    return 0;\n}\n\nstatic void __exit functions_exit(void) {\n    printk(KERN_INFO \"Functions module unloaded\\n\");\n}\n\nmodule_init(functions_init);\nmodule_exit(functions_exit);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Your Name\");\nMODULE_DESCRIPTION(\"Functions and return values demonstration module\");",
  "concepts": [
    "function declaration",
    "function parameters",
    "return values",
    "function calls"
  ],
  "skills": [
    "Function design",
    "Parameter passing",
    "Return value handling",
    "Code organization"
  ],
  "inputOutput": {
    "expectedOutput": [
      "Sum of 15 and 25 is: 40",
      "Maximum of 15 and 25 is: 25"
    ],
    "requirements": [
      "Use required function names: functions_init, functions_exit",
      "Create function 'calculate_sum' that takes two int parameters and returns int",
      "Create function 'find_max' that takes two int parameters and returns int",
      "Use exact variables: a=15, b=25",
      "Print in exact format shown above",
      "Functions must return correct values"
    ]
  },
  "validation": {
    "exactRequirements": {
      "functionNames": ["functions_init", "functions_exit", "calculate_sum", "find_max"],
      "variables": [
        { "name": "a", "type": "int", "value": 15 },
        { "name": "b", "type": "int", "value": 25 }
      ],
      "outputMessages": [
        "Sum of 15 and 25 is: 40",
        "Maximum of 15 and 25 is: 25"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h", 
        "linux/init.h"
      ],
      "mustContain": ["int calculate_sum", "int find_max", "return"],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "function_declarations",
        "name": "Function Declarations",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["int calculate_sum", "int find_max"],
        "prohibitedSymbols": []
      },
      {
        "id": "return_statements",
        "name": "Return Statements",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["return"],
        "prohibitedSymbols": []
      },
      {
        "id": "correct_calculations",
        "name": "Correct Calculations",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Sum of 15 and 25 is: 40", "exact": true },
          { "pattern": "Maximum of 15 and 25 is: 25", "exact": true }
        ]
      }
    ]
  }
}