{
  "id": 13,
  "title": "Structures and Pointers - Part 2: Arrow Operator",
  "phase": "foundations",
  "difficulty": 4,
  "xp": 35,
  "description": "Learn to use pointers to structures and the arrow operator. Understand the difference between dot and arrow operators. This builds on Part 1 structure knowledge.",
  "starter": "#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n\n// From Part 1 - COMPLETED CODE (structure definition):\n// You learned structure definition, member access with dot operator\n\n// Define the same structure from Part 1:\nstruct student {\n    int id;\n    char name[20];\n    int age;\n    float gpa;\n};\n\n// Part 2 - NEW CONCEPTS:\n// TODO: Learn pointer to structure and arrow operator\n\nstatic int __init structures_pointers_init(void) {\n    struct student stu = {102, \"Bob\", 21, 3.5};\n    \n    // TODO: Declare a pointer 'stu_ptr' that points to 'stu'\n    // TODO: Print all member values using arrow operator:\n    // \"Student ID via pointer: 102\"\n    // \"Student Name via pointer: Bob\"\n    // \"Student Age via pointer: 21\"\n    // \"Student GPA via pointer: 3\"\n    \n    return 0;\n}\n\nstatic void __exit structures_pointers_exit(void) {\n    printk(KERN_INFO \"Structures and pointers module unloaded\\n\");\n}\n\nmodule_init(structures_pointers_init);\nmodule_exit(structures_pointers_exit);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Your Name\");\nMODULE_DESCRIPTION(\"Structures and pointers demonstration module\");",
  "concepts": [
    "pointers to structures",
    "arrow operator",
    "structure pointer dereferencing",
    "dot vs arrow operator"
  ],
  "skills": [
    "Advanced structure usage",
    "Pointer-based structure access",
    "Operator selection",
    "Structure pointer manipulation"
  ],
  "multiPart": {
    "part": 2,
    "totalParts": 3,
    "nextProblemId": 11,
    "previousProblemId": 9
  },
  "inputOutput": {
    "expectedOutput": [
      "Student ID via pointer: 102",
      "Student Name via pointer: Bob",
      "Student Age via pointer: 21",
      "Student GPA via pointer: 3"
    ],
    "requirements": [
      "Use required function names: structures_pointers_init, structures_pointers_exit",
      "Use provided structure definition and initialization",
      "Declare pointer 'stu_ptr' that points to 'stu'",
      "Access all members using arrow operator (stu_ptr->member)",
      "Print in exact format shown above",
      "Must use arrow operator, not dot operator with pointer"
    ]
  },
  "validation": {
    "exactRequirements": {
      "functionNames": ["structures_pointers_init", "structures_pointers_exit"],
      "variables": [
        { "name": "stu_ptr", "type": "struct student*", "value": "&stu" }
      ],
      "outputMessages": [
        "Student ID via pointer: 102",
        "Student Name via pointer: Bob",
        "Student Age via pointer: 21", 
        "Student GPA via pointer: 3"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h",
        "linux/init.h"
      ],
      "mustContain": ["struct student *stu_ptr", "stu_ptr->id", "stu_ptr->name", "stu_ptr->age", "stu_ptr->gpa"],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "pointer_declaration",
        "name": "Structure Pointer Declaration",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["struct student *stu_ptr", "&stu"],
        "prohibitedSymbols": []
      },
      {
        "id": "arrow_operator_usage",
        "name": "Arrow Operator Usage",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": ["stu_ptr->id", "stu_ptr->name", "stu_ptr->age", "stu_ptr->gpa"],
        "prohibitedSymbols": ["(*stu_ptr)."]
      },
      {
        "id": "correct_pointer_access",
        "name": "Correct Pointer Access",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Student ID via pointer: 102", "exact": true },
          { "pattern": "Student Name via pointer: Bob", "exact": true },
          { "pattern": "Student Age via pointer: 21", "exact": true },
          { "pattern": "Student GPA via pointer: 3", "exact": true }
        ]
      }
    ]
  }
}