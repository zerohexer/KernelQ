{
  "id": 4,
  "title": "Use Your Variable",
  "phase": "foundations", 
  "difficulty": 2,
  "xp": 20,
  "description": "Learn to use variables by printing them with proper format specifiers. Build on your knowledge of header/C file structure while introducing printk formatting - a crucial skill for kernel debugging.",
  "mainFile": "use_vars.c",
  "files": [
    {
      "name": "use_vars.h",
      "content": "#ifndef USE_VARS_H\n#define USE_VARS_H\n\n#include <linux/module.h>\n#include <linux/kernel.h>\n#include <linux/init.h>\n\nextern int my_number;\n\n#endif /* USE_VARS_H */",
      "readOnly": false,
      "language": "h"
    },
    {
      "name": "use_vars.c",
      "content": "#include \"use_vars.h\"\n\nint my_number = 42;\n\n/* TODO: Implement the function */\n/* void print_my_number(void) {\n *     printk(KERN_INFO \"My number is: %d\\n\", my_number);\n * } */\n\nstatic int __init use_vars_init(void)\n{\n    printk(KERN_INFO \"Variable usage module loaded\\n\");\n    /* TODO: Call your function here */\n    /* print_my_number(); */\n    return 0;\n}\n\nstatic void __exit use_vars_exit(void)\n{\n    printk(KERN_INFO \"Variable usage module unloaded\\n\");\n}\n\nmodule_init(use_vars_init);\nmodule_exit(use_vars_exit);\n\nMODULE_LICENSE(\"GPL\");\nMODULE_AUTHOR(\"Student\");\nMODULE_DESCRIPTION(\"Learning to use variables with printk formatting\");\nMODULE_VERSION(\"1.0\");",
      "readOnly": false,
      "language": "c"
    },
    {
      "name": "Makefile",
      "content": "# Variable usage module Makefile\nobj-m += use_vars.o\n\n# Kernel build directory\nKDIR := /lib/modules/$(shell uname -r)/build\n\n# Default target\nall:\n\tmake -C $(KDIR) M=$(PWD) modules\n\nclean:\n\tmake -C $(KDIR) M=$(PWD) clean\n\ninstall: all\n\tmake -C $(KDIR) M=$(PWD) modules_install\n\nhelp:\n\tmake -C $(KDIR) M=$(PWD) help\n\n.PHONY: all clean install help",
      "readOnly": true,
      "language": "makefile"
    }
  ],
  "concepts": [
    "variable usage",
    "printk formatting",
    "format specifiers",
    "integer printing",
    "debugging output"
  ],
  "skills": [
    "Using variables in printk",
    "printk with format specifiers", 
    "Variable access in kernel modules",
    "Debugging output"
  ],
  "validation": {
    "exactRequirements": {
      "functionNames": ["use_vars_init", "use_vars_exit"],
      "variables": [
        { "name": "my_number", "type": "int", "value": 42 }
      ],
      "outputMessages": [
        "Variable usage module loaded",
        "My number is: 42"
      ],
      "requiredIncludes": [
        "linux/module.h",
        "linux/kernel.h",
        "linux/init.h"
      ],
      "mustContain": [
        "printk(KERN_INFO \"My number is: %d\\n\", my_number)"
      ],
      "moduleInfo": {
        "license": "GPL"
      }
    },
    "testCases": [
      {
        "id": "function_signatures_source",
        "name": "Function Signatures in Source File",
        "type": "code_analysis",
        "critical": true,
        "expectedSymbols": [
          "static int __init use_vars_init(void)",
          "static void __exit use_vars_exit(void)"
        ],
        "prohibitedSymbols": []
      },
      {
        "id": "variable_usage_test",
        "name": "Variable Usage and Formatting Test",
        "type": "kernel_project_test",
        "critical": true,
        "testScenario": {
          "userspaceApps": [
            {
              "name": "variable_usage_validator",
              "source": "#include <stdio.h>\\n#include <stdlib.h>\\n#include <string.h>\\n\\nint main() {\\n    printf(\\\"=== Variable Usage Validation Test ===\\\\n\\\");\\n    \\n    printf(\\\"Phase 1: Testing module loading and variable usage...\\\\n\\\");\\n    system(\\\"insmod /lib/modules/use_vars.ko\\\");\\n    \\n    printf(\\\"Phase 2: Checking if variable is used correctly in printk...\\\\n\\\");\\n    system(\\\"dmesg | tail -5 | grep '42' && echo 'Variable value 42 found in kernel log'\\\");\\n    \\n    printf(\\\"Phase 3: Validating format specifier usage...\\\\n\\\");\\n    printf(\\\"SUCCESS: Variable my_number must be used with %%d format to show '42'\\\\n\\\");\\n    \\n    system(\\\"rmmod use_vars\\\");\\n    printf(\\\"SUCCESS: Variable usage validation completed\\\\n\\\");\\n    return 0;\\n}"
            }
          ],
          "testCommands": [
            "echo 'Testing variable usage and formatting with value validation...'",
            "/bin/variable_usage_validator",
            "echo 'Adding delay to ensure dmesg messages are written...'",
            "sleep 1",
            "echo 'Phase 1: Basic module functionality check...'",
            "dmesg | grep 'Variable usage module loaded' && echo 'PASS: use_vars_init function working' || echo 'FAIL: use_vars_init function missing'",
            "echo 'Phase 2: Variable value and formatting validation...'",
            "dmesg | grep 'My number is: 42' && echo 'PASS: Variable my_number correctly used with value 42' || echo 'FAIL: Variable not used or wrong value/format'",
            "echo 'Phase 3: Integer format specifier validation...'",
            "dmesg | grep ': 42' && echo 'PASS: Integer format (%d) correctly displays 42' || echo 'FAIL: Format specifier incorrect'",
            "echo 'Phase 4: Module unload check...'",
            "dmesg | grep 'Variable usage module unloaded' && echo 'PASS: use_vars_exit function working' || echo 'FAIL: use_vars_exit function missing'",
            "echo 'PASS: All variable usage validation tests completed'"
          ],
          "expected": {
            "dmesg": [
              "Variable usage module loaded",
              "My number is: 42",
              "Variable usage module unloaded"
            ],
            "stdout": [
              "Variable Usage Validation Test",
              "SUCCESS: Variable usage validation completed",
              "PASS: All variable usage validation tests completed"
            ]
          },
          "timeout": 30
        }
      },
      {
        "id": "exact_output",
        "name": "Exact Output Messages",
        "type": "output_match",
        "critical": true,
        "expected": [
          { "pattern": "Variable usage module loaded", "exact": true, "linkedFunction": "static int __init use_vars_init(void)" },
          { "pattern": "My number is: 42", "exact": true, "linkedFunction": "void print_my_number(void)" }
        ]
      }
    ]
  }
}
