{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Kernel Learning Problem Definition",
  "type": "object",
  "required": ["id", "title", "phase", "difficulty", "xp", "description", "starter"],
  "properties": {
    "id": {
      "type": "integer",
      "minimum": 1,
      "description": "Unique problem identifier"
    },
    "title": {
      "type": "string",
      "minLength": 1,
      "description": "Problem title"
    },
    "phase": {
      "type": "string",
      "enum": [
        "foundations", "intermediate", "advanced", "expert", "professional",
        "kernel_core", "drivers", "synchronization", "filesystems", 
        "memory_mgmt", "networking", "performance", "security"
      ],
      "description": "Learning phase"
    },
    "difficulty": {
      "type": "integer",
      "minimum": 1,
      "maximum": 10,
      "description": "Difficulty level (1-10)"
    },
    "xp": {
      "type": "integer",
      "minimum": 1,
      "description": "Experience points awarded"
    },
    "description": {
      "type": "string",
      "minLength": 1,
      "description": "Problem description"
    },
    "starter": {
      "type": "string",
      "description": "Template/starter code"
    },
    "concepts": {
      "type": "array",
      "items": { "type": "string" },
      "description": "Learning concepts"
    },
    "skills": {
      "type": "array", 
      "items": { "type": "string" },
      "description": "Skills developed"
    },
    "problemId": {
      "type": "string",
      "description": "Multi-part problem identifier"
    },
    "inputOutput": {
      "type": "object",
      "properties": {
        "expectedOutput": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Expected dmesg output for users to see"
        },
        "requirements": {
          "type": "array",
          "items": { "type": "string" },
          "description": "User-friendly requirements shown in frontend"
        }
      },
      "description": "Frontend user-facing requirements and expected output"
    },
    "multiPart": {
      "type": "object",
      "properties": {
        "partNumber": { "type": "integer", "minimum": 1 },
        "totalParts": { "type": "integer", "minimum": 1 },
        "nextPartId": { "type": ["integer", "null"] },
        "previousPartId": { "type": ["integer", "null"] }
      }
    },
    "validation": {
      "type": "object",
      "properties": {
        "exactRequirements": {
          "type": "object",
          "properties": {
            "functionNames": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Required function names"
            },
            "variables": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "type": { "type": "string" },
                  "value": { "type": ["string", "number", "boolean"] }
                },
                "required": ["name", "type"]
              },
              "description": "Required variables"
            },
            "outputMessages": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Expected dmesg output"
            },
            "requiredIncludes": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Required #includes"
            },
            "mustContain": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Required code patterns"
            },
            "structures": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "type": { "type": "string" },
                  "fields": { "type": "array", "items": { "type": "string" } }
                }
              }
            },
            "moduleInfo": {
              "type": "object",
              "properties": {
                "license": { "type": "string" },
                "author": { "type": "string" },
                "description": { "type": "string" },
                "version": { "type": "string" }
              }
            }
          }
        },
        "testCases": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["id", "name", "type", "critical"],
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "type": {
                "type": "string",
                "enum": ["output_match", "symbol_check", "code_analysis", "structure_check", "variable_check"]
              },
              "critical": { "type": "boolean" },
              "expected": {
                "type": "array",
                "description": "Expected values for test"
              },
              "expectedSymbols": {
                "type": "array",
                "items": { "type": "string" }
              },
              "prohibitedSymbols": {
                "type": "array", 
                "items": { "type": "string" }
              }
            }
          }
        }
      }
    },
    "frontendTests": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "checkFunction": { "type": "string", "description": "JavaScript function as string" }
        }
      },
      "description": "Frontend-only JavaScript tests"
    },
    "legacy": {
      "type": "object",
      "properties": {
        "validation": {
          "type": "object",
          "properties": {
            "compileTest": { "type": "boolean" },
            "runtimeTest": { "type": "string" },
            "requiredOutput": {
              "type": "array",
              "items": { "type": "string" }
            }
          }
        },
        "leetCodeStyle": { "type": "boolean" }
      }
    }
  }
}